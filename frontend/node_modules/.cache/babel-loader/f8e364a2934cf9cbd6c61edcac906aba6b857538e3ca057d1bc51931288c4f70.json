{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final year Project\\\\harmony-in-diversity\\\\frontend\\\\src\\\\pages\\\\Gallery.jsx\",\n  _s = $RefreshSig$();\n// Gallery.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport useFetch from '../hooks/useFetch';\nimport { BASE_URL } from '../utils/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenreCards = _ref => {\n  let {\n    genres\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-3 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/gallery/${genre}`,\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = GenreCards;\nconst Gallery = () => {\n  _s();\n  const genres = ['Action', 'Adventure', 'Comedy', 'Drama'];\n  const {\n    genre\n  } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [images, setImages] = useState([]);\n  const fetchImages = async () => {\n    setLoading(true);\n    try {\n      const res = await fetch(`${BASE_URL}/gallery?genre=${genre}`);\n      if (!res.ok) {\n        throw new Error('Failed to fetch');\n      }\n      const data = await res.json();\n      setImages(data);\n      setLoading(false);\n    } catch (error) {\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/gallery\",\n          children: /*#__PURE__*/_jsxDEV(GenreCards, {\n            genres: genres\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/gallery/:genre\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3 mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: image.url,\n                  className: \"card-img-top\",\n                  alt: image.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    children: image.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Gallery, \"/bifBYh8AjNpK/XlLUsJW3Ks/TM=\", true);\n_c2 = Gallery;\nexport default Gallery;\nvar _c, _c2;\n$RefreshReg$(_c, \"GenreCards\");\n$RefreshReg$(_c2, \"Gallery\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","Link","useFetch","BASE_URL","GenreCards","genres","map","genre","index","Gallery","useParams","loading","setLoading","error","setError","images","setImages","fetchImages","res","fetch","ok","Error","data","json","message","image","url","title"],"sources":["E:/Final year Project/harmony-in-diversity/frontend/src/pages/Gallery.jsx"],"sourcesContent":["// Gallery.js\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch ,Link} from 'react-router-dom';\r\nimport useFetch from '../hooks/useFetch';\r\nimport { BASE_URL } from '../utils/config';\r\n\r\nconst GenreCards = ({ genres }) => {\r\n    return (\r\n        <div className=\"row\">\r\n            {genres.map((genre, index) => (\r\n                <div className=\"col-md-3 mb-3\" key={index}>\r\n                    <Link to={`/gallery/${genre}`} className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{genre}</h5>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Gallery = () => {\r\n    const genres = ['Action', 'Adventure', 'Comedy', 'Drama']; \r\n    const { genre } = useParams();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [images, setImages] = useState([]);\r\n\r\n    const fetchImages = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await fetch(`${BASE_URL}/gallery?genre=${genre}`);\r\n            if (!res.ok) {\r\n                throw new Error('Failed to fetch');\r\n            }\r\n            const data = await res.json();\r\n            setImages(data);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            setError(error.message);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"container\">\r\n                <Switch>\r\n                    <Route exact path=\"/gallery\">\r\n                        <GenreCards genres={genres} />\r\n                    </Route>\r\n                    <Route path=\"/gallery/:genre\">\r\n                        <div className=\"row\">\r\n                            {images.map((image, index) => (\r\n                                <div className=\"col-md-3 mb-3\" key={index}>\r\n                                    <div className=\"card\">\r\n                                        <img src={image.url} className=\"card-img-top\" alt={image.title} />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{image.title}</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default Gallery;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}