{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final year Project\\\\harmony-in-diversity\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport NewsLetter from '../shared/Newsletter';\nimport FeaturedTourList from '../components/Featured-tours/FeaturedTourList';\nimport Subtitle from '../shared/Subtitle';\nimport { BASE_URL } from '../utils/config';\nimport { AuthContext } from '../context/AuthContext';\n\n// const BookingList = () => {\n// const {user} = useContext(AuthContext)\n// const [bookings, setBookings] = useState([]);\n\n//     console.log('User id : ',user.data._id)\n\n//   useEffect(() => {\n//     const fetchBookings = async () => {\n//         try {\n//             const response = await fetch(`${BASE_URL}/booking/${user.data._id}`);\n//             console.log('Here is the response', response);\n//             if (!response.ok) {\n//                 throw new Error('Failed to fetch bookings');\n//             }\n//             const data = await response.json();\n//             console.log('here is the data', data);\n//         } catch (error) {\n//             console.error('Error fetching bookings:', error);\n//         }\n//     };\n\n//     fetchBookings();\n// }, [user.data._id]); // Empty dependency array\n\n// };\n\n// const Dashboard = () => {\n//   return <>\n//     <section>\n//       <Container>\n//         <Row>\n//           <Col lg='6'>\n//           <BookingList/>\n//           <ul>\n//               {bookings.map((booking) => (\n//                 <li key={booking._id}>{/* Render booking details */}</li>\n//               ))}\n//             </ul>\n//           </Col>\n//         </Row>\n//       </Container>\n//     </section>\n\n//     <section>\n//     <Container>\n//         <Row>\n//           <Col lg='12' className='mb-5'>\n//             <Subtitle subtitle={'Recommendations'} />\n//             <h2 className='featured__tour-title'>Our Best Featured Tours</h2>\n//           </Col>\n//           <FeaturedTourList />\n//         </Row>\n//       </Container>\n\n//       <NewsLetter />\n//     </section>\n\n//     </>\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingList = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [bookings, setBookings] = useState([]);\n  useEffect(() => {\n    const fetchBookings = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/bookings/${user.data._id}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch bookings');\n        }\n        const data = await response.json();\n        setBookings(data); // Assuming data is an array of booking objects\n      } catch (error) {\n        console.error('Error fetching bookings:', error);\n      }\n    };\n    fetchBookings();\n  }, [user.data._id]); // Ensure useEffect runs when user ID changes\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n            subtitle: 'Booked Tours'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: bookings.map(booking => /*#__PURE__*/_jsxDEV(\"li\", {}, booking._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 7\n  }, this);\n};\n_s(BookingList, \"+ToQnF+0ZgFwyUYxWk1COxDdorw=\");\n_c = BookingList;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"BookingList\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Container","Row","Col","NewsLetter","FeaturedTourList","Subtitle","BASE_URL","AuthContext","BookingList","user","bookings","setBookings","fetchBookings","response","fetch","data","_id","ok","Error","json","error","console","map","booking","Dashboard"],"sources":["E:/Final year Project/harmony-in-diversity/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport NewsLetter from '../shared/Newsletter';\r\nimport FeaturedTourList from '../components/Featured-tours/FeaturedTourList';\r\nimport Subtitle from '../shared/Subtitle';\r\nimport { BASE_URL } from '../utils/config';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\n\r\n\r\n// const BookingList = () => {\r\n// const {user} = useContext(AuthContext)\r\n// const [bookings, setBookings] = useState([]);\r\n\r\n//     console.log('User id : ',user.data._id)\r\n\r\n\r\n//   useEffect(() => {\r\n//     const fetchBookings = async () => {\r\n//         try {\r\n//             const response = await fetch(`${BASE_URL}/booking/${user.data._id}`);\r\n//             console.log('Here is the response', response);\r\n//             if (!response.ok) {\r\n//                 throw new Error('Failed to fetch bookings');\r\n//             }\r\n//             const data = await response.json();\r\n//             console.log('here is the data', data);\r\n//         } catch (error) {\r\n//             console.error('Error fetching bookings:', error);\r\n//         }\r\n//     };\r\n\r\n//     fetchBookings();\r\n// }, [user.data._id]); // Empty dependency array\r\n\r\n\r\n  \r\n// };\r\n\r\n// const Dashboard = () => {\r\n//   return <>\r\n//     <section>\r\n//       <Container>\r\n//         <Row>\r\n//           <Col lg='6'>\r\n//           <BookingList/>\r\n//           <ul>\r\n//               {bookings.map((booking) => (\r\n//                 <li key={booking._id}>{/* Render booking details */}</li>\r\n//               ))}\r\n//             </ul>\r\n//           </Col>\r\n//         </Row>\r\n//       </Container>\r\n//     </section>\r\n\r\n//     <section>\r\n//     <Container>\r\n//         <Row>\r\n//           <Col lg='12' className='mb-5'>\r\n//             <Subtitle subtitle={'Recommendations'} />\r\n//             <h2 className='featured__tour-title'>Our Best Featured Tours</h2>\r\n//           </Col>\r\n//           <FeaturedTourList />\r\n//         </Row>\r\n//       </Container>\r\n\r\n//       <NewsLetter />\r\n//     </section>\r\n\r\n\r\n\r\n    \r\n\r\n    \r\n//     </>\r\n// };\r\n\r\n\r\n\r\n\r\n\r\nconst BookingList = () => {\r\n    const { user } = useContext(AuthContext);\r\n    const [bookings, setBookings] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      const fetchBookings = async () => {\r\n        try {\r\n          const response = await fetch(`${BASE_URL}/bookings/${user.data._id}`);\r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch bookings');\r\n          }\r\n          const data = await response.json();\r\n          setBookings(data); // Assuming data is an array of booking objects\r\n        } catch (error) {\r\n          console.error('Error fetching bookings:', error);\r\n        }\r\n      };\r\n  \r\n      fetchBookings();\r\n    }, [user.data._id]); // Ensure useEffect runs when user ID changes\r\n  \r\n    return (\r\n      <section>\r\n        <Container>\r\n          <Row>\r\n            <Col lg='6'>\r\n              <Subtitle subtitle={'Booked Tours'} />\r\n              {/* Render the list of bookings */}\r\n              <ul>\r\n                {bookings.map((booking) => (\r\n                  <li key={booking._id}>{/* Render booking details */}</li>\r\n                ))}\r\n              </ul>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    );\r\n  };\r\n  \r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,YAAY;AAChD,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,gBAAgB,MAAM,+CAA+C;AAC5E,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,WAAW,QAAQ,wBAAwB;;AAIpD;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAOA;AACA;AAAA;AAMA,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAM;IAAEC;EAAK,CAAC,GAAGZ,UAAU,CAACU,WAAW,CAAC;EACxC,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,YAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,QAAS,aAAYG,IAAI,CAACM,IAAI,CAACC,GAAI,EAAC,CAAC;QACrE,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;QAC7C;QACA,MAAMH,IAAI,GAAG,MAAMF,QAAQ,CAACM,IAAI,EAAE;QAClCR,WAAW,CAACI,IAAI,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDR,aAAa,EAAE;EACjB,CAAC,EAAE,CAACH,IAAI,CAACM,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;;EAErB,oBACE;IAAA,uBACE,QAAC,SAAS;MAAA,uBACR,QAAC,GAAG;QAAA,uBACF,QAAC,GAAG;UAAC,EAAE,EAAC,GAAG;UAAA,wBACT,QAAC,QAAQ;YAAC,QAAQ,EAAE;UAAe;YAAA;YAAA;YAAA;UAAA,QAAG,eAEtC;YAAA,UACGN,QAAQ,CAACY,GAAG,CAAEC,OAAO,iBACpB,kBAASA,OAAO,CAACP,GAAG;cAAA;cAAA;cAAA;YAAA,QACrB;UAAC;YAAA;YAAA;YAAA;UAAA,QACC;QAAA;UAAA;UAAA;UAAA;QAAA;MACD;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,GAtCER,WAAW;AAAA,KAAXA,WAAW;AAwCjB,eAAegB,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}