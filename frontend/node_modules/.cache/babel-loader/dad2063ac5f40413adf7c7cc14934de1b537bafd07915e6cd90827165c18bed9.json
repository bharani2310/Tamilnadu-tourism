{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final year Project\\\\harmony-in-diversity\\\\frontend\\\\src\\\\pages\\\\Gallery.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\nimport useFetch from '../hooks/useFetch';\nimport { BASE_URL } from '../utils/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Gallery = () => {\n  _s();\n  const {\n    data: galleryImages,\n    error,\n    loading\n  } = useFetch(`${BASE_URL}/gallery`);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: galleryImages.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"masonry__img\",\n          src: item.photo // Make sure to handle cases where item is undefined or doesn't have a 'photo' property\n          ,\n          alt: item.title,\n          style: {\n            width: '100%',\n            display: 'block',\n            borderRadius: '20px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this))\n  }, void 0, false);\n};\n_s(Gallery, \"icsr3tPkhw2jtp8Atv4jGcDyFDA=\", false, function () {\n  return [useFetch];\n});\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","Masonry","ResponsiveMasonry","useFetch","BASE_URL","Gallery","data","galleryImages","error","loading","map","item","index","photo","title","width","display","borderRadius"],"sources":["E:/Final year Project/harmony-in-diversity/frontend/src/pages/Gallery.jsx"],"sourcesContent":["import React from 'react';\r\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\r\nimport useFetch from '../hooks/useFetch';\r\nimport { BASE_URL } from '../utils/config';\r\n\r\nconst Gallery = () => {\r\n    const { data: galleryImages, error, loading } = useFetch(`${BASE_URL}/gallery`);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {galleryImages.map((item, index) => (\r\n    <div key={index}>\r\n        {item && (\r\n            <>\r\n                <h1>Hello</h1>\r\n\r\n                <img\r\n                    className='masonry__img'\r\n                    src={item.photo} // Make sure to handle cases where item is undefined or doesn't have a 'photo' property\r\n                    alt={item.title}\r\n                    style={{\r\n                        width: '100%',\r\n                        display: 'block',\r\n                        borderRadius: '20px'\r\n                    }}\r\n                />\r\n                <p>{item.title}</p>\r\n            </>\r\n        )}\r\n    </div>\r\n))}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Gallery;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,IAAIC,iBAAiB,QAAQ,0BAA0B;AACrE,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,QAAQ,QAAQ,iBAAiB;AAAC;AAAA;AAE3C,MAAMC,OAAO,GAAG,MAAM;EAAA;EAClB,MAAM;IAAEC,IAAI,EAAEC,aAAa;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGN,QAAQ,CAAE,GAAEC,QAAS,UAAS,CAAC;EAE/E,IAAIK,OAAO,EAAE;IACT,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAChC;EAEA,IAAID,KAAK,EAAE;IACP,oBAAO;MAAA,WAAK,SAAO,EAACA,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO;EACpC;EAEA,oBACI;IAAA,UACKD,aAAa,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvC;MAAA,UACKD,IAAI,iBACD;QAAA,wBACI;UAAA,UAAI;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK,eAEd;UACI,SAAS,EAAC,cAAc;UACxB,GAAG,EAAEA,IAAI,CAACE,KAAM,CAAC;UAAA;UACjB,GAAG,EAAEF,IAAI,CAACG,KAAM;UAChB,KAAK,EAAE;YACHC,KAAK,EAAE,MAAM;YACbC,OAAO,EAAE,OAAO;YAChBC,YAAY,EAAE;UAClB;QAAE;UAAA;UAAA;UAAA;QAAA,QACJ,eACF;UAAA,UAAIN,IAAI,CAACG;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;IAE1B,GAjBKF,KAAK;MAAA;MAAA;MAAA;IAAA,QAmBlB;EAAC,iBAES;AAEX,CAAC;AAAC,GArCIP,OAAO;EAAA,QACuCF,QAAQ;AAAA;AAAA,KADtDE,OAAO;AAuCb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}