{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final year Project\\\\harmony-in-diversity\\\\frontend\\\\src\\\\Gallery\\\\GenreImages.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { BASE_URL } from '../utils/config';\nimport './gallery.css'; // Import CSS file for styling\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry'; // Import ResponsiveMasonry\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenreImages = () => {\n  _s();\n  const {\n    genre\n  } = useParams();\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchImages = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(`${BASE_URL}/gallery?genre=${genre}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const responseData = await response.json();\n        const {\n          data\n        } = responseData;\n        setImages(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchImages();\n  }, [genre]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Images from \", genre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveMasonry, {\n      children: /*#__PURE__*/_jsxDEV(Masonry, {\n        gutter: \"1rem\",\n        children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/gallery/${genre}`,\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: image.photo,\n                alt: image.title,\n                className: \"card-img-top hover-effect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"title-container\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  children: image.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(GenreImages, \"3e50U0OlLEvrorNy6irAbwbnL5E=\", false, function () {\n  return [useParams];\n});\n_c = GenreImages;\nexport default GenreImages;\nvar _c;\n$RefreshReg$(_c, \"GenreImages\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","BASE_URL","Masonry","ResponsiveMasonry","GenreImages","genre","images","setImages","loading","setLoading","error","setError","fetchImages","response","fetch","ok","Error","responseData","json","data","message","map","image","index","photo","title"],"sources":["E:/Final year Project/harmony-in-diversity/frontend/src/Gallery/GenreImages.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { BASE_URL } from '../utils/config'; \r\nimport './gallery.css'; // Import CSS file for styling\r\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry'; // Import ResponsiveMasonry\r\n\r\nconst GenreImages = () => {\r\n    const { genre } = useParams();\r\n    const [images, setImages] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchImages = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const response = await fetch(`${BASE_URL}/gallery?genre=${genre}`);\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch data');\r\n                }\r\n                const responseData = await response.json();\r\n                const { data } = responseData;\r\n                setImages(data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                setError(error.message);\r\n                setLoading(false);\r\n            }\r\n        };\r\n        \r\n        fetchImages();\r\n    }, [genre]);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Images from {genre}</h2>\r\n            <ResponsiveMasonry>\r\n                <Masonry gutter=\"1rem\">\r\n                    {images.map((image, index) => (\r\n                        <div className=\"col-md-3 mb-3\" key={index}>\r\n                            <Link to={`/gallery/${genre}`} className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <img src={image.photo} alt={image.title}  className=\"card-img-top hover-effect\" />\r\n                                    <div className=\"title-container\">\r\n                                        <h4 className=\"card-title\">{image.title}</h4>\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    ))}\r\n                </Masonry>\r\n            </ResponsiveMasonry>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenreImages;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAO,eAAe,CAAC,CAAC;AACxB,OAAOC,OAAO,IAAIC,iBAAiB,QAAQ,0BAA0B,CAAC,CAAC;AAAA;AAEvE,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAM;IAAEC;EAAM,CAAC,GAAGN,SAAS,EAAE;EAC7B,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMc,WAAW,GAAG,YAAY;MAC5BH,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,QAAS,kBAAiBI,KAAM,EAAC,CAAC;QAClE,IAAI,CAACQ,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QAC3C;QACA,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QAC1C,MAAM;UAAEC;QAAK,CAAC,GAAGF,YAAY;QAC7BV,SAAS,CAACY,IAAI,CAAC;QACfV,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,CAACU,OAAO,CAAC;QACvBX,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,WAAW,EAAE;EACjB,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,IAAIG,OAAO,EAAE;IACT,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAChC;EAEA,IAAIE,KAAK,EAAE;IACP,oBAAO;MAAA,WAAK,SAAO,EAACA,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO;EACpC;EAEA,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAA,WAAI,cAAY,EAACL,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAC5B,QAAC,iBAAiB;MAAA,uBACd,QAAC,OAAO;QAAC,MAAM,EAAC,MAAM;QAAA,UACjBC,MAAM,CAACe,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrB;UAAK,SAAS,EAAC,eAAe;UAAA,uBAC1B,QAAC,IAAI;YAAC,EAAE,EAAG,YAAWlB,KAAM,EAAE;YAAC,SAAS,EAAC,MAAM;YAAA,uBAC3C;cAAK,SAAS,EAAC,WAAW;cAAA,wBACtB;gBAAK,GAAG,EAAEiB,KAAK,CAACE,KAAM;gBAAC,GAAG,EAAEF,KAAK,CAACG,KAAM;gBAAE,SAAS,EAAC;cAA2B;gBAAA;gBAAA;gBAAA;cAAA,QAAG,eAClF;gBAAK,SAAS,EAAC,iBAAiB;gBAAA,uBAC5B;kBAAI,SAAS,EAAC,YAAY;kBAAA,UAAEH,KAAK,CAACG;gBAAK;kBAAA;kBAAA;kBAAA;gBAAA;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QAC3C;YAAA;cAAA;cAAA;cAAA;YAAA;UACJ;YAAA;YAAA;YAAA;UAAA;QACH,GARyBF,KAAK;UAAA;UAAA;UAAA;QAAA,QAU5C;MAAC;QAAA;QAAA;QAAA;MAAA;IACI;MAAA;MAAA;MAAA;IAAA,QACM;EAAA;IAAA;IAAA;IAAA;EAAA,QAClB;AAEd,CAAC;AAAC,GAxDInB,WAAW;EAAA,QACKL,SAAS;AAAA;AAAA,KADzBK,WAAW;AA0DjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}