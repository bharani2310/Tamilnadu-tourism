{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final year Project\\\\harmony-in-diversity\\\\frontend\\\\src\\\\pages\\\\Gallery.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\nimport useFetch from '../hooks/useFetch';\nimport { BASE_URL } from '../utils/config';\nimport './../s'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Gallery = () => {\n  _s();\n  const {\n    data: galleryImages,\n    error,\n    loading\n  } = useFetch(`${BASE_URL}/gallery`);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: galleryImages && galleryImages.length > 0 && /*#__PURE__*/_jsxDEV(ResponsiveMasonry, {\n      columnsCountBreakPoints: {\n        768: 2,\n        992: 3,\n        1200: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Masonry, {\n        gutter: \"1rem\",\n        children: galleryImages.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"masonry__item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"masonry__img-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"masonry__img\",\n              src: item.photo,\n              alt: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"masonry__img-title\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 37\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(Gallery, \"icsr3tPkhw2jtp8Atv4jGcDyFDA=\", false, function () {\n  return [useFetch];\n});\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","Masonry","ResponsiveMasonry","useFetch","BASE_URL","Gallery","data","galleryImages","error","loading","length","map","item","index","photo","title"],"sources":["E:/Final year Project/harmony-in-diversity/frontend/src/pages/Gallery.jsx"],"sourcesContent":["import React from 'react';\r\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\r\nimport useFetch from '../hooks/useFetch';\r\nimport { BASE_URL } from '../utils/config';\r\nimport './../s'; // Import the CSS file\r\n\r\nconst Gallery = () => {\r\n    const { data: galleryImages, error, loading } = useFetch(`${BASE_URL}/gallery`);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {galleryImages && galleryImages.length > 0 && (\r\n                <ResponsiveMasonry columnsCountBreakPoints={{ 768: 2, 992: 3, 1200: 4 }}>\r\n                    <Masonry gutter='1rem'>\r\n                        {galleryImages.map((item, index) => (\r\n                            <div key={index} className=\"masonry__item\">\r\n                                <div className=\"masonry__img-container\">\r\n                                    <img\r\n                                        className='masonry__img'\r\n                                        src={item.photo}\r\n                                        alt={item.title}\r\n                                    />\r\n                                    <div className=\"masonry__img-title\">{item.title}</div> {/* Title within the image */}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </Masonry>\r\n                </ResponsiveMasonry>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Gallery;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,IAAIC,iBAAiB,QAAQ,0BAA0B;AACrE,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAO,QAAQ,CAAC,CAAC;AAAA;AAAA;AAEjB,MAAMC,OAAO,GAAG,MAAM;EAAA;EAClB,MAAM;IAAEC,IAAI,EAAEC,aAAa;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGN,QAAQ,CAAE,GAAEC,QAAS,UAAS,CAAC;EAE/E,IAAIK,OAAO,EAAE;IACT,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAChC;EAEA,IAAID,KAAK,EAAE;IACP,oBAAO;MAAA,WAAK,SAAO,EAACA,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO;EACpC;EAEA,oBACI;IAAA,UACKD,aAAa,IAAIA,aAAa,CAACG,MAAM,GAAG,CAAC,iBACtC,QAAC,iBAAiB;MAAC,uBAAuB,EAAE;QAAE,GAAG,EAAE,CAAC;QAAE,GAAG,EAAE,CAAC;QAAE,IAAI,EAAE;MAAE,CAAE;MAAA,uBACpE,QAAC,OAAO;QAAC,MAAM,EAAC,MAAM;QAAA,UACjBH,aAAa,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3B;UAAiB,SAAS,EAAC,eAAe;UAAA,uBACtC;YAAK,SAAS,EAAC,wBAAwB;YAAA,wBACnC;cACI,SAAS,EAAC,cAAc;cACxB,GAAG,EAAED,IAAI,CAACE,KAAM;cAChB,GAAG,EAAEF,IAAI,CAACG;YAAM;cAAA;cAAA;cAAA;YAAA,QAClB,eACF;cAAK,SAAS,EAAC,oBAAoB;cAAA,UAAEH,IAAI,CAACG;YAAK;cAAA;cAAA;cAAA;YAAA,QAAO,KAAC;UAAA;YAAA;YAAA;YAAA;UAAA;QACrD,GARAF,KAAK;UAAA;UAAA;UAAA;QAAA,QAUlB;MAAC;QAAA;QAAA;QAAA;MAAA;IACI;MAAA;MAAA;MAAA;IAAA;EAEjB,iBACF;AAEX,CAAC;AAAC,GAjCIR,OAAO;EAAA,QACuCF,QAAQ;AAAA;AAAA,KADtDE,OAAO;AAmCb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}