{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final year Project\\\\harmony-in-diversity\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [tours, setTours] = useState([]);\n  const [formData, setFormData] = useState({\n    title: '',\n    city: '',\n    address: '',\n    distance: '',\n    photo: '',\n    desc: '',\n    price: '',\n    maxGroupSize: '',\n    nearbyDestinations: []\n  });\n\n  // Fetch tours when component mounts\n  useEffect(() => {\n    // Add code to fetch tours from backend\n    // Example: fetchTours();\n  }, []);\n\n  // Function to handle form field changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Function to handle nearby destination changes\n  const handleNearbyDestinationChange = (index, field, value) => {\n    const updatedNearbyDestinations = [...formData.nearbyDestinations];\n    updatedNearbyDestinations[index][field] = value;\n    setFormData(prevData => ({\n      ...prevData,\n      nearbyDestinations: updatedNearbyDestinations\n    }));\n  };\n\n  // Function to add a nearby destination field\n  const addNearbyDestinationField = () => {\n    setFormData(prevData => ({\n      ...prevData,\n      nearbyDestinations: [...prevData.nearbyDestinations, {\n        nearbytourname: '',\n        distance: ''\n      }]\n    }));\n  };\n\n  // Function to remove a nearby destination field\n  const removeNearbyDestinationField = index => {\n    const updatedNearbyDestinations = [...formData.nearbyDestinations];\n    updatedNearbyDestinations.splice(index, 1);\n    setFormData(prevData => ({\n      ...prevData,\n      nearbyDestinations: updatedNearbyDestinations\n    }));\n  };\n\n  // Function to handle form submission (create or update tour)\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Add code to send formData to backend for creation/update\n    // Example: createOrUpdateTour(formData);\n  };\n\n  // Function to handle tour deletion\n  const handleDeleteTour = tourId => {\n    // Add code to send delete request to backend\n    // Example: deleteTour(tourId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create/Update Tour\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tours\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tours.map(tour => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [tour.title, \" - \", tour.city, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTour(tour._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, tour._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"0mcpx0Y+wqgShkn+8g1Y7t1csNo=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","AdminDashboard","tours","setTours","formData","setFormData","title","city","address","distance","photo","desc","price","maxGroupSize","nearbyDestinations","handleInputChange","e","name","value","target","prevData","handleNearbyDestinationChange","index","field","updatedNearbyDestinations","addNearbyDestinationField","nearbytourname","removeNearbyDestinationField","splice","handleSubmit","preventDefault","handleDeleteTour","tourId","map","tour","_id"],"sources":["E:/Final year Project/harmony-in-diversity/frontend/src/pages/AdminDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction AdminDashboard() {\r\n  const [tours, setTours] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    city: '',\r\n    address: '',\r\n    distance: '',\r\n    photo: '',\r\n    desc: '',\r\n    price: '',\r\n    maxGroupSize: '',\r\n    nearbyDestinations: [],\r\n  });\r\n\r\n  // Fetch tours when component mounts\r\n  useEffect(() => {\r\n    // Add code to fetch tours from backend\r\n    // Example: fetchTours();\r\n  }, []);\r\n\r\n  // Function to handle form field changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Function to handle nearby destination changes\r\n  const handleNearbyDestinationChange = (index, field, value) => {\r\n    const updatedNearbyDestinations = [...formData.nearbyDestinations];\r\n    updatedNearbyDestinations[index][field] = value;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      nearbyDestinations: updatedNearbyDestinations,\r\n    }));\r\n  };\r\n\r\n  // Function to add a nearby destination field\r\n  const addNearbyDestinationField = () => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      nearbyDestinations: [...prevData.nearbyDestinations, { nearbytourname: '', distance: '' }],\r\n    }));\r\n  };\r\n\r\n  // Function to remove a nearby destination field\r\n  const removeNearbyDestinationField = (index) => {\r\n    const updatedNearbyDestinations = [...formData.nearbyDestinations];\r\n    updatedNearbyDestinations.splice(index, 1);\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      nearbyDestinations: updatedNearbyDestinations,\r\n    }));\r\n  };\r\n\r\n  // Function to handle form submission (create or update tour)\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Add code to send formData to backend for creation/update\r\n    // Example: createOrUpdateTour(formData);\r\n  };\r\n\r\n  // Function to handle tour deletion\r\n  const handleDeleteTour = (tourId) => {\r\n    // Add code to send delete request to backend\r\n    // Example: deleteTour(tourId);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create/Update Tour</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Form fields */}\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n      <h2>Tours</h2>\r\n      <ul>\r\n        {tours.map((tour) => (\r\n          <li key={tour._id}>\r\n            {tour.title} - {tour.city}\r\n            <button onClick={() => handleDeleteTour(tour._id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}